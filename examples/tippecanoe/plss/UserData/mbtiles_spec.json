{
    "ImageId": "ami-087c17d1fe0178315",
    "KeyName": "geoplatform",
    "SecurityGroupIds": [ "sg-098a0214e40b42e6a" ],
    "InstanceType": "m5ad.xlarge",
    "Placement": {
        "AvailabilityZone": "us-east-1a"
    },
    "IamInstanceProfile": {
        "Arn": "arn:aws:iam::998343784597:instance-profile/TippeCanoe"
    },
    "BlockDeviceMappings": [{
        "DeviceName": "/dev/xvda",
        "Ebs": {
            "DeleteOnTermination": true,
            "SnapshotId": "snap-0699a041095ac5492",
            "VolumeSize": 100,
            "VolumeType": "gp3",
            "Encrypted": false
        }
    }],
   "UserData": ""
}