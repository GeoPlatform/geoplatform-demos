{"remainingRequest":"/Users/nyuszi/_GeoDataDemos/geoplatform-demos/keycloak/doks/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/nyuszi/_GeoDataDemos/geoplatform-demos/keycloak/doks/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/nyuszi/_GeoDataDemos/geoplatform-demos/keycloak/doks/src/technotes/suggestions.md?vue&type=template&id=2ebcaa5b&","dependencies":[{"path":"/Users/nyuszi/_GeoDataDemos/geoplatform-demos/keycloak/doks/src/technotes/suggestions.md","mtime":1621822662739},{"path":"/Users/nyuszi/_GeoDataDemos/geoplatform-demos/keycloak/doks/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nyuszi/_GeoDataDemos/geoplatform-demos/keycloak/doks/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/nyuszi/_GeoDataDemos/geoplatform-demos/keycloak/doks/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nyuszi/_GeoDataDemos/geoplatform-demos/keycloak/doks/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nyuszi/_GeoDataDemos/geoplatform-demos/keycloak/doks/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJzdWdnZXN0aW9ucy1mb3ItbW92aW5nLWZvcndhcmQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3VnZ2VzdGlvbnMtZm9yLW1vdmluZy1mb3J3YXJkIj4jPC9hPiBTdWdnZXN0aW9ucyBmb3IgTW92aW5nIEZvcndhcmQ8L2gxPgo8cD5Mw7NydW0gaXBzZSByw6F6aWsgYXogw7Zyw7ZzIGzDoXJpbmthIGVsbGVuLi4uIEEgaGF0w6Fyw7NsIG1lZyBhbm55aXQ6IGEgc8O8cmvDtnAgw6FsdGFsIHRhbMOhbnkgcGx1c3ogw7ZudMOpc8O2a25layBjaWNrIHNlIHTDtmJiZXNlIHNlIGTDtnrDqXNlIGEgY2lnw6FrbsOhbC4gRXp0IGFra29yIHRlbMWRZHRlLCBtaWtvciBoYW5zIHTDoXp0YSwgaG9neSBraWtldCBoZW1sZXbFkWR0IGtpIGEgc8OtZWzDqXMgdsOhcnRpbmRhLiBBIGEgc8OhbnlvcyBtYXpuYW4gdGV0ZXRlbG1ldCBrw7Z6w7Z0dGVzIHZvbHQgdMO2Z2VyZWtlZG5pZSwgbWl2ZWwgYSB0ZXJlZMOpcyBww7xsw6lzIGV6dCB0ZWtlZHRlLiAoT2x5YW4gdmlya8Oha3LDs2wgdm9sdCBkdXR0ecOzLCBha2lrIGFtw7pneSBpcyBtw6FyIG3DoXrDoXNiYW4gdm9sdGFrLik8L3A+CjxwPkEgaGFsb21mb24gcGVkaWcgbGVoZXTFkXbDqSByYXN6dG90dGEsIGhvZ3kgbGVnYWzDoWJiIDQga29udHVzaWcgbMOzZGpvbiBhIGRvbcOhY2nDsyBoYXTDoWphLCBhIGN1a2EgbWFtbWEgc2lsbMOpc2UsIGNpZ2F0aGF0c29uIGEgbnlvesOhcyDDqXJsw6lzZSBhIGvDoW55c8OhZ2JhbiwgYmVzZXBsxZEgYm9uY3Nva2thbCBhIHbDoW55b3MgZnV0YWwgw7xneWxlbmUsIGEgc3plcmVzIHN6b2tvZMOhc29rb24gYXZhZHQgenNpbMOpa2UsIGF6IGFsbWFzw6FnIMOpcmzDqXNlLCBnYWxhdGxhbiBib25jc29rLCBkw6lrbMWRIGtvcm9zdGEsIG1vesOhcywgc3RiLiBQb250b3NhbiBleiBhIG5ha29ueSB0ZW5jZSBzw7xyw7ZsdCBha3Rva2JhLiBNYWpkIGvDqXBlciBzemVsZXQgMS1pZyBrb2RqYSBhIGxla2Npw7N0IHN6dW5nYsOzbC48L3A+CjxwPjxpbWcgc3JjPSJodHRwczovL3ZpYS5wbGFjZWhvbGRlci5jb20vNzgweDMwMCIgYWx0PSJQbGFjZWhvbGRlciAtIEZvcmsgaW4gUm9hZCI+PC9wPgo8aDIgaWQ9Im9wdGlvbi1hIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI29wdGlvbi1hIj4jPC9hPiBPcHRpb24gQTo8L2gyPgo8cD5NZW5jacOzIGvDtmJlY3Nsw6lrIMOpcyBiw7pnw7MsIGVzesOpZCBzemFrb2sgc2VtbWlzw6lnIGN1Y2thIFRyYWd5IChkb23DoWTDqXpqb24gYSBmw6F6dG9zIG1hcnRvcyDigJ5wYW5kb3Nzw6Fn4oCdIHNhZGFycmEhKSBUcmFneSAoZG9tw6Fkw6l6am9uIGEgZsOhenRvcyBtYXJ0b3Mg4oCecGFuZG9zc8OhZ+KAnSBzYWRhcnJhISkgVHJhZ3kgKGRvbcOhZMOpempvbiBhIGbDoXp0b3MgbWFydG9zIOKAnnBhbmRvc3PDoWfigJ0gc2FkYXJyYSEpIE1lbmNpw7Mga8O2YmVjc2zDqWsgw6lzIGLDumfDsywgZXN6w6lkIHRhbnPDoWcgYm9ydMOhcyBjdWNrYSBNZW5jacOzIGvDtmJlY3Nsw6lrIMOpcyBiw7pnw7MsIHZhcnQgcmV0cnVtIGZvbHlhIGN1Y2thIFRyYWd5IChkb23DoWTDqXpqb24gYSBmw6F6dG9zIG1hcnRvcyDigJ5wYW5kb3Nzw6Fn4oCdIHNhZGFycmEhKTwvcD4KPGgzIGlkPSJhLTEiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYS0xIj4jPC9hPiBBLjE8L2gzPgo8dWw+CjxsaT5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LjwvbGk+CjxsaT5WZXN0aWJ1bHVtIHZlbCBsZW8gZWdldCBsYWN1cyBwcmV0aXVtIGlhY3VsaXMgYSBsdWN0dXMgZXguPC9saT4KPGxpPkludGVnZXIgYWMgZGlhbSBub24gbWF1cmlzIHZpdmVycmEgcHVsdmluYXIgdWx0cmljZXMgZWdldCBuaXNsLjwvbGk+CjwvdWw+CjxoMyBpZD0iYS0yIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2EtMiI+IzwvYT4gQS4yPC9oMz4KPHVsPgo8bGk+SW50ZWdlciBpbiBlcmF0IGF0IG1hZ25hIHNvZGFsZXMgbWF4aW11cyBhdCBpbiBsZW8uPC9saT4KPGxpPlZpdmFtdXMgcGxhY2VyYXQgbnVsbGEgdmVsIG1hdHRpcyB0ZW1wb3IuPC9saT4KPGxpPkFlbmVhbiB2b2x1dHBhdCB1cm5hIHZpdGFlIGZlcm1lbnR1bSB1bHRyaWNlcy48L2xpPgo8L3VsPgo8aDIgaWQ9Im9wdGlvbi1iIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI29wdGlvbi1iIj4jPC9hPiBPcHRpb24gQjo8L2gyPgo8cD5BeiBlcmVkw6lzcmUga2V6w6lzIGvDtnrFkSwgYSBrbGF0bGEgdGlzenRhIHRldMWRasOpYmVuLiBBIG7FkWtlIHBlZ8WRamUgaGFqZMOtdHNvbiBtZWcgYSBrbGF0bMOhbiwgYSBtaXJ1bSBuZSDDtm3DtnTDtmxqw7ZuLCBuZSBpamVsamVuIHJhanRhLCBrw6l0c8OpZ2JlZXN2ZSBrZXJlc3ZlIGEgZGVsZWfDqXQuIEEgcGltdXNvayDDqWpqZWxpaywgYSB0YW5rw7N0w6FrIHRhbGthbGFuYWsgbGVneWVuZWssIGRlIGEga8OhY2nDs25hayAtIGEgasOzIGvDtmx5Zm5layAtIG1lZ2ZlbGVsxZFlbiwgZXpla2V0IG5hZ3lvbiBzb2sgZm9uYWd5YWxvbW1hbCBsZWhldCB2aXpzZ8OhcyBpcm9uLi4uIOKAnuKAnlNva2FuIGF6dCBjc29zw610asOhaywgaG9neSBhIGZvbmEsIG1pbnQgYSBnbMOhcyBkZXRsZWfDqXNlIGEgZ2zDoXN0IGt1a2tvbGphLCB2w6FueXRha29kamEuIEEgZsOpbMOpc2LFkWwgdmloYW4gZWd5IG1lbmTFkSBmb25hZ3lhbG9tb3QsIHMgYXp0IHRlbHrFkWJlIGh1bmR1bMOhbGphLiDigJ5hIGNzYXbDrXTDsyBrdWNrIGNzYWsgYWtrb3Iga2VyZW55aGVtLCBoYSBlZ3lyw6lzenQgdGVjaG5pa2FpbGFnIG55b3rDqWtvcywgdGVow6F0IHN6aWtrYXN6dMOzIMOpcmVuIMOpcyBtdWx0w7MgZ3VneWkgdml6c2fDoWxqYSA7IG3DoXNyw6lzenQsIGhhIGpvZ29zb3MgZGlnbGlqZSBqZXRlbGVzLiBIYXJtYWRzb3JiYW4sIHMgZXogYSBrw6lyxZEga8O8bMWRLCBhIOKAnmvDqWplZMOpc+KAnS48L3A+CjxoMyBpZD0iYi0xIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2ItMSI+IzwvYT4gQi4xPC9oMz4KPHVsPgo8bGk+SW50ZWdlciBlZ2V0IG1hc3NhIHV0IHVybmEgY29uZGltZW50dW0gc2VtcGVyIGVnZXN0YXMgaWQgdHVycGlzLjwvbGk+CjxsaT5Nb3JiaSBuZWMgZG9sb3IgdGVtcG9yIGZlbGlzIHVsbGFtY29ycGVyIHBsYWNlcmF0IHNlZCBxdWlzIGxpZ3VsYS48L2xpPgo8bGk+TnVuYyBpbnRlcmR1bSBsb3JlbSBxdWlzIGVyb3MgbW9sbGlzIG1hdHRpcy48L2xpPgo8L3VsPgo8aDMgaWQ9ImItMiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNiLTIiPiM8L2E+IEIuMjwvaDM+Cjx1bD4KPGxpPk51bmMgcG9zdWVyZSBqdXN0byBpYWN1bGlzLCB2ZW5lbmF0aXMgbGliZXJvIGFjLCBlZ2VzdGFzIGVyb3MuPC9saT4KPGxpPkNyYXMgcG9zdWVyZSBsZW8gbmVjIGRpYW0gc2FnaXR0aXMsIHNpdCBhbWV0IGVsZW1lbnR1bSBtaSBlZ2VzdGFzLjwvbGk+CjwvdWw+CjxoMyBpZD0iYi0zIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2ItMyI+IzwvYT4gQi4zPC9oMz4KPHVsPgo8bGk+RnVzY2UgcGVsbGVudGVzcXVlIHZlbGl0IG5vbiBhdWd1ZSB1bGxhbWNvcnBlciBsYW9yZWV0LjwvbGk+CjxsaT5JbnRlZ2VyIGVnZXQgdmVsaXQgaW1wZXJkaWV0LCBtYXhpbXVzIHRvcnRvciBhdCwgc29sbGljaXR1ZGluIG9kaW8uPC9saT4KPGxpPlN1c3BlbmRpc3NlIGZlcm1lbnR1bSBtaSBlZ2V0IG9kaW8gcHVsdmluYXIgZWxlbWVudHVtLjwvbGk+CjxsaT5DcmFzIHNvZGFsZXMgbWV0dXMgbmVjIHR1cnBpcyB1bGxhbWNvcnBlciBvcm5hcmUuPC9saT4KPGxpPlZpdmFtdXMgZXQgbmliaCBpZCBlcm9zIGJsYW5kaXQgYWxpcXVhbS48L2xpPgo8L3VsPgo8aDIgaWQ9Im9wdGlvbi3wn5iFIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI29wdGlvbi3wn5iFIj4jPC9hPiBPcHRpb24g8J+YhTo8L2gyPgo8cD48ZW0+WW91IGRvIHNvbWV0aGluZyB0b3RhbGx5IGRpZmZlcmVudCwgYW5kIGxldCB1cyBrbm93IGxvbC48L2VtPjwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}